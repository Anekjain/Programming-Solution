Fisher-Yeates Shuffling Algorithm
-------------------------------------
Time-Complexity - O(n)

Working:
Given a rand() function which generates an element from the given array.
Starting from the last of the Array. Every element is in-place replaced with random 
number generated.

Algorithm:
To shuffle an array a of n elements (indices 0..n-1):
  for i from n - 1 downto 1 do
       j = random integer with 0 <= j <= i
       exchange a[j] and a[i]


Implementation in Python:

import Random

def Fisher-Yates_Shuffling(arr,n):
	for i in range(n-1, 0, -1):
		j = random.randint(0,i+1)
		arr[i],arr[j] = arr[j],arr[i]
	return arr			
